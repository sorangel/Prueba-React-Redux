{"version":3,"sources":["types/globalTypes.js","reducers/globalReducer.js","store/index.js","components/Modal/styles.js","components/Modal/index.js","components/ImgContainer/styles.js","components/ImgContainer/index.js","components/ListOfImages/styles.js","components/ListOfImages/index.js","api/index.js","actions/globalActions.js","views/Home.js","App.js","reportWebVitals.js","index.js"],"names":["TOGGLE_IMAGES","SET_CHARACTERS","initialState","showImages","characters","rootReducers","combineReducers","global","state","action","type","globalTypes","body","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ModalContainer","styled","Modal","ModalWrapper","Grid","open","onClose","children","ImgWrapper","div","Img","img","ImgContainer","cover","src","CardsContainer","ListOfImages","data","map","index","image","key","id","getCharacters","fetch","then","json","setCharacters","dispatch","Title","Typography","connect","toggleShowImages","useEffect","results","console","log","container","spacing","direction","className","item","variant","Button","onClick","color","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4f2a4d1.chunk.js","sourcesContent":["export const TOGGLE_IMAGES = \"[Handle Change]: TOGGLE_IMAGES\";\r\nexport const SET_CHARACTERS = \"[Handle Change]: SET_CHARACTERS\";\r\n","import { globalTypes } from \"../types\";\r\n\r\nconst initialState = { showImages: false, characters: [] };\r\n\r\nexport default function globalReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case globalTypes.TOGGLE_IMAGES:\r\n      return {\r\n        ...state,\r\n        showImages: !state.showImages,\r\n      };\r\n\r\n    case globalTypes.SET_CHARACTERS:\r\n      return {\r\n        ...state,\r\n        characters: action.body,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport globalReducer from \"../reducers/globalReducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n  global: globalReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import styled from \"styled-components\";\r\nimport { Modal, Grid } from \"@material-ui/core\";\r\n\r\nexport const ModalContainer = styled(Modal)`\r\n  position: relative;\r\n  width: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n  height: min-content;\r\n  display: grid;\r\n`;\r\n\r\nexport const ModalWrapper = styled(Grid)`\r\n  width: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n  background: white;\r\n  height: min-content;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport { ModalContainer, ModalWrapper } from \"./styles\";\r\n\r\nexport const Modal = ({ open, onClose, children }) => {\r\n  return (\r\n    <ModalContainer open={open} onClose={onClose}>\r\n      <ModalWrapper>{children}</ModalWrapper>\r\n    </ModalContainer>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ImgWrapper = styled.div`\r\n  scroll-snap-align: center;\r\n  width: 300px;\r\n  min-width: 300px;\r\n  max-width: 300px;\r\n  height: 300px;\r\n  min-height: 300px;\r\n  max-height: 300px;\r\n  margin: 0 10px 0 0;\r\n  padding: 0 5px 0 5px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  height: 100%;\r\n  object-fit: cover; //Para que la imagen se ajuste\r\n  width: 100%;\r\n  border-radius: 20px;\r\n`;\r\n","import React from \"react\";\r\nimport { ImgWrapper, Img } from \"./styles\";\r\n\r\nexport const ImgContainer = ({ cover = \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\" }) => {\r\n  return (\r\n    <ImgWrapper>\r\n      <Img src={cover}/>\r\n    </ImgWrapper>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const CardsContainer = styled.div`\r\n  width: 100%;\r\n  min-width: 100%;\r\n  max-width: 100%;\r\n  overflow-x: scroll;\r\n  scroll-padding: 0 50%;\r\n  scroll-snap-type: x mandatory;\r\n  display: flex;\r\n  padding: 20px;\r\n  height: min-content;\r\n  margin: 0 0 10px 0;\r\n`;\r\n","import React from \"react\";\r\nimport { ImgContainer } from \"../ImgContainer\";\r\nimport { CardsContainer } from \"./styles\";\r\n//import Card from \"@material-ui/core/Card\";\r\n\r\nexport const ListOfImages = ({ data = [] }) => {\r\n  return (\r\n    <CardsContainer>\r\n      {data.map(({ image: cover, id: key }, index) => (\r\n        <ImgContainer cover={cover} key={`${index}:${key}`} />\r\n      ))}\r\n    </CardsContainer>\r\n  );\r\n};\r\n","\r\n\r\n\r\nexport const getCharacters = fetch (\"https://rickandmortyapi.com/api/character/\").then( (data)=> {\r\n    return data.json();\r\n})","import { globalTypes } from \"../types\";\r\n\r\nexport function toggleShowImages(dispatch, body) {\r\n  dispatch({\r\n    type: globalTypes.TOGGLE_IMAGES,\r\n  });\r\n}\r\n\r\nexport function setCharacters(dispatch, characters = []) {\r\n  dispatch({\r\n    type: globalTypes.SET_CHARACTERS,\r\n    body: characters,\r\n  });\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { ListOfImages } from \"../components/ListOfImages\";\r\nimport { getCharacters } from \"../api\";\r\nimport { setCharacters, toggleShowImages } from \"../actions/globalActions\";\r\n\r\nexport const Title = styled(Typography)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  align-content: center;\r\n  font-weight: 200;\r\n`;\r\n\r\nconst mapStateToProps = ({ global }) => ({\r\n  ...global,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  toggleShowImages() {\r\n    return toggleShowImages(dispatch, {});\r\n  },\r\n  setCharacters(characters = []) {\r\n    return setCharacters(dispatch, characters);\r\n  },\r\n});\r\n\r\nconst Home = ({ characters, showImages, toggleShowImages, setCharacters }) => {\r\n  useEffect(() => {\r\n    getCharacters.then((data) => {\r\n      setCharacters(data.results);\r\n    });\r\n  }, []);\r\n\r\n  console.log(showImages);\r\n\r\n  return (\r\n    <Grid container spacing={8} direction=\"column\" className=\"App\">\r\n      <Grid item>\r\n        <Title variant=\"h2\">Contenido</Title>\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Button onClick={toggleShowImages} color=\"primary\" variant=\"contained\">\r\n          Ejecutar Consulta\r\n        </Button>\r\n      </Grid>\r\n\r\n      <Modal onClose={toggleShowImages} open={showImages}>\r\n        <ListOfImages data={characters} />\r\n\r\n        <Button\r\n          onClick={toggleShowImages}\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n        >\r\n          Cerrar\r\n        </Button>\r\n      </Modal>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport { Home } from \"./views\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <Home />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}